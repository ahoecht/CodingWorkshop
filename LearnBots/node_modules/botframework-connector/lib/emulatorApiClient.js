"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class EmulatorApiClient {
    static emulateOAuthCards(credentials, emulatorUrl, emulate) {
        return __awaiter(this, void 0, void 0, function* () {
            let token = yield credentials.getToken();
            let requestUrl = emulatorUrl + (emulatorUrl.endsWith('/') ? '' : '/') + `api/usertoken/emulateOAuthCards?emulate=${(!!emulate).toString()}`;
            const res = yield fetch(requestUrl, {
                method: 'POST',
                headers: {
                    Authorization: `Bearer ${token}`
                }
            });
            if (res.ok) {
                return true;
            }
            else {
                throw new Error(`EmulateOAuthCards failed with status code: ${res.status}`);
            }
        });
    }
}
exports.EmulatorApiClient = EmulatorApiClient;
//# sourceMappingURL=emulatorApiClient.js.map