{"version":3,"sources":["fullState.js"],"names":["FullState","parse","fullState","type","FULL_STATE","UNKNOWN","meetingState","state","locked","getFullState","oldFullState","newFullState","previous","current","updates","isMeetingEnded","isMeetingTerminating","meetingTypeChangedTo","isTypeChanged","INACTIVE","ACTIVE","INITIALIZING","TERMINATING"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,YAAY,EAAlB;;AAEAA,UAAUC,KAAV,GAAkB,UAACC,SAAD;AAAA,SAAgB;AAChCC,UAAMD,UAAUC,IAAV,IAAkBC,sBAAWC,OADH;AAEhCC,kBAAcJ,UAAUK,KAFQ;AAGhCC,YAAQN,UAAUM;AAHc,GAAhB;AAAA,CAAlB;;AAOAR,UAAUS,YAAV,GAAyB,UAACC,YAAD,EAAeC,YAAf,EAAgC;AACvD,MAAMC,WAAWF,gBAAgBV,UAAUC,KAAV,CAAgBS,YAAhB,CAAjC;AACA,MAAMG,UAAUF,gBAAgBX,UAAUC,KAAV,CAAgBU,YAAhB,CAAhC;;AAEA,SAAO;AACLC,sBADK;AAELC,oBAFK;AAGLC,aAAS;AACPC,sBAAgBf,UAAUe,cAAV,CAAyBH,QAAzB,EAAmCC,OAAnC,CADT;AAEPG,4BAAsBhB,UAAUgB,oBAAV,CAA+BJ,QAA/B,EAAyCC,OAAzC,CAFf;AAGPI,4BAAsBjB,UAAUkB,aAAV,CAAwBN,QAAxB,EAAkCC,OAAlC;AAHf;AAHJ,GAAP;AASD,CAbD;;AAeAb,UAAUe,cAAV,GAA2B,UAACH,QAAD,EAAWC,OAAX,EAAuB;AAChD,MAAIA,QAAQN,KAAR,KAAkBH,sBAAWe,QAA7B,IAAyCP,QAAzC,KACFA,SAASL,KAAT,KAAmBH,sBAAWgB,MAA9B,IACAR,SAASL,KAAT,KAAmBH,sBAAWiB,YAD9B,IAEAT,SAASL,KAAT,KAAmBH,sBAAWkB,WAH5B,CAAJ,EAG8C;AAC5C,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CATD;;AAWAtB,UAAUgB,oBAAV,GAAiC,UAACJ,QAAD,EAAWC,OAAX,EAAuB;AACtD,MAAIA,QAAQN,KAAR,KAAkBH,sBAAWkB,WAA7B,IAA4CV,QAA5C,KACHA,SAASL,KAAT,KAAmBH,sBAAWgB,MAA9B,IACCR,SAASL,KAAT,KAAmBH,sBAAWiB,YAF5B,CAAJ,EAE+C;AAC7C,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CARD;;AAUArB,UAAUkB,aAAV,GAA0B,UAACN,QAAD,EAAWC,OAAX,EAAuB;AAC/C,MAAI,CAACD,QAAD,IAAaC,QAAQV,IAAR,KAAiBS,SAAST,IAA3C,EAAiD;AAC/C,WAAOU,WAAWA,QAAQV,IAA1B;AACD;;AAED,SAAO,IAAP;AACD,CAND;;kBAQeH,S","file":"fullState.js","sourcesContent":["import {FULL_STATE} from '../constants';\n\nconst FullState = {};\n\nFullState.parse = (fullState) => ({\n  type: fullState.type || FULL_STATE.UNKNOWN,\n  meetingState: fullState.state,\n  locked: fullState.locked\n});\n\n\nFullState.getFullState = (oldFullState, newFullState) => {\n  const previous = oldFullState && FullState.parse(oldFullState);\n  const current = newFullState && FullState.parse(newFullState);\n\n  return {\n    previous,\n    current,\n    updates: {\n      isMeetingEnded: FullState.isMeetingEnded(previous, current),\n      isMeetingTerminating: FullState.isMeetingTerminating(previous, current),\n      meetingTypeChangedTo: FullState.isTypeChanged(previous, current)\n    }\n  };\n};\n\nFullState.isMeetingEnded = (previous, current) => {\n  if (current.state === FULL_STATE.INACTIVE && previous &&\n   (previous.state === FULL_STATE.ACTIVE ||\n    previous.state === FULL_STATE.INITIALIZING ||\n    previous.state === FULL_STATE.TERMINATING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isMeetingTerminating = (previous, current) => {\n  if (current.state === FULL_STATE.TERMINATING && previous &&\n  (previous.state === FULL_STATE.ACTIVE ||\n    previous.state === FULL_STATE.INITIALIZING)) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isTypeChanged = (previous, current) => {\n  if (!previous || current.type !== previous.type) {\n    return current && current.type;\n  }\n\n  return null;\n};\n\nexport default FullState;\n"]}