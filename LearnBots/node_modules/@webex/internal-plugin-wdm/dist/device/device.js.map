{"version":3,"sources":["device.js"],"names":["decider","config","ephemeral","Device","WebexPlugin","extend","children","features","FeaturesModel","collections","serviceCatalog","ServiceCollection","idAttribute","namespace","props","clientMessagingGiphy","customerCompanyName","customerLogoUrl","deviceType","helpUrl","intranetInactivityDuration","intranetInactivityCheckUrl","inNetworkInactivityDuration","ecmEnabledForAllUsers","type","default","ecmSupportedStorageProviders","modificationTime","navigationBarColor","partnerCompanyName","partnerLogoUrl","peopleInsightsEnabled","reportingSiteDesc","reportingSiteUrl","searchEncryptionKeyUrl","services","serviceHostMap","serviceLinks","hostCatalog","showSupportText","supportProviderCompanyName","supportProviderLogoUrl","url","userId","webFileShareControl","webSocketUrl","whiteboardFileShareControl","derived","registered","deps","fn","Boolean","session","logoutTimer","lastUserActivityDate","isReachabilityChecked","isInMeeting","isInNetwork","determineService","feature","developer","get","value","key","serviceUrl","startsWith","resolve","substr","length","reject","Error","getServiceUrl","service","_getServiceUrl","then","isServiceUrl","getPreDiscoveryServiceUrl","preDiscoveryServices","getWebSocketUrl","useServiceCatalogUrl","uri","inferServiceFromUrl","s","replaceUrlWithCurrentHost","markUrlFailedAndGetNew","logger","info","markFailedAndCycleUrl","webex","internal","metrics","submitClientMetrics","tags","action","failedUrl","newUrl","catch","_resetAllAndRetry","resetAllAndRetry","fetchNewUrls","refresh","on","initialize","args","prototype","forEach","collectionName","model","options","trigger","_updateServiceCatalog","listenToAndRun","testNetworkReachability","listenTo","Date","now","_resetLogoutTimer","inspect","depth","util","serialize","isPreDiscoveryService","_isService","meetingStarted","meetingEnded","request","headers","trackingid","method","isPreDiscoveryServiceUrl","_isServiceUrl","isService","_isServiceUrlFromCatalog","isSpecificService","includes","target","hostName","Url","parse","hostname","availableHost","host","register","body","ttl","ephemeralDeviceTTL","defaults","res","_processRegistrationSuccess","reason","statusCode","clear","resource","unregister","warn","clearTimeout","refreshTimer","set","delay","newRegistration","hosts","defaultUrl","availableHosts","remove","off","unset","enableInactivityEnforcement","_setLogoutTimer","duration","timer","logout","oneFlight"],"mappings":"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","file":"device.js","sourcesContent":["/*!\n * Copyright (c) 2015-2019 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport util from 'util';\nimport Url from 'url';\n\nimport {oneFlight} from '@webex/common';\nimport {safeSetTimeout} from '@webex/common-timers';\nimport {omit, find} from 'lodash';\nimport {persist, waitForValue, WebexPlugin} from '@webex/webex-core';\n\nimport FeaturesModel from './features-model';\nimport ServiceCollection from './service-collection';\n\n\n/**\n * Decides if this device should be persisted to boundedStorage, based on\n * this.config.ephemeral.\n * @returns {Boolean}\n */\nfunction decider() {\n  return !this.config.ephemeral;\n}\n\nconst Device = WebexPlugin.extend({\n  children: {\n    features: FeaturesModel\n  },\n\n  collections: {\n    serviceCatalog: ServiceCollection\n  },\n\n  idAttribute: 'url',\n\n  namespace: 'Device',\n\n  props: {\n    /**\n     * Notifies the client if giphys are enabled.\n     * Currently, the values for it are:\n     * - ALLOW\n     * - BLOCK\n     * @instance\n     * @memberof Device\n     * @type {string}\n     */\n    clientMessagingGiphy: 'string',\n    customerCompanyName: 'string',\n    customerLogoUrl: 'string',\n    // deviceType doesn't have any real value, but we need to send it during\n    // device refresh to make sure we don't get back an ios device url\n    deviceType: 'string',\n    helpUrl: 'string',\n    intranetInactivityDuration: 'number',\n    intranetInactivityCheckUrl: 'string',\n    inNetworkInactivityDuration: 'number', // Newly added duration for internal network inactivity\n    /**\n     * Is ECM (external content management) enabled for the whole org\n     * @instance\n     * @memberof Device\n     * @type {boolean}\n     */\n    ecmEnabledForAllUsers: {\n      type: 'boolean',\n      default: () => false\n    },\n    /**\n     * What ECM providers are available\n     * @instance\n     * @memberof Device\n     * @type {string[]}\n     */\n    ecmSupportedStorageProviders: {\n      type: 'array',\n      default: () => []\n    },\n    modificationTime: 'string',\n    navigationBarColor: 'string',\n    partnerCompanyName: 'string',\n    partnerLogoUrl: 'string',\n    peopleInsightsEnabled: 'boolean',\n    reportingSiteDesc: 'string',\n    reportingSiteUrl: 'string',\n    searchEncryptionKeyUrl: 'string',\n    // services is obsoleted and will be deprecated\n    services: {\n      // Even though @jodykstr will tell you the docs claim you don't need to\n      // initialize `object` properties, the docs lie.\n      default() {\n        return {};\n      },\n      type: 'object'\n    },\n    serviceHostMap: {\n      default() {\n        return {\n          serviceLinks: {},\n          hostCatalog: {}\n        };\n      },\n      type: 'object'\n    },\n    showSupportText: 'boolean',\n    supportProviderCompanyName: 'string',\n    supportProviderLogoUrl: 'string',\n    url: 'string',\n    userId: 'string',\n    /**\n     * Notifies the client if file sharing is disabled.\n     * Currently, the values for it are:\n     * - BLOCK_BOTH\n     * - BLOCK_UPLOAD\n     * @instance\n     * @memberof Device\n     * @type {string}\n     */\n    webFileShareControl: 'string',\n    webSocketUrl: 'string',\n    /**\n     * Notifies the client if whiteboarding should be allowed\n     * regardless of webFileShareControl settings.\n     * Currently, the values for it are:\n     * - ALLOW\n     * - BLOCK\n     * @instance\n     * @memberof Device\n     * @type {string}\n     */\n    whiteboardFileShareControl: 'string'\n  },\n\n  derived: {\n    registered: {\n      deps: ['url'],\n      fn() {\n        return Boolean(this.url);\n      }\n    }\n  },\n\n  session: {\n    // Fun Fact: setTimeout returns a Timer object instead of a Number in Node 6\n    // or later\n    logoutTimer: 'any',\n    lastUserActivityDate: 'number',\n    isReachabilityChecked: 'boolean', // To prevent url reachabilty from being called more than once on successful check.\n    isInMeeting: 'boolean', // Boolean for checking user is in meeting to prevent in advertent timeout due to inactivity\n    isInNetwork: 'boolean' // Boolean to ensure _resetLogoutTimer isn't called repeatedly once its known client is connected to org's internal network\n  },\n\n  @waitForValue('@')\n  determineService(url) {\n    const feature = this.features.developer.get('web-high-availability');\n\n    if (feature && feature.value) {\n      for (const key of Object.keys(this.serviceHostMap.serviceLinks)) {\n        const serviceUrl = this.serviceHostMap.serviceLinks[key];\n\n        if (url.startsWith(serviceUrl)) {\n          return Promise.resolve(key);\n        }\n      }\n    }\n    else {\n      for (const key of Object.keys(this.services)) {\n        const serviceUrl = this.services[key];\n\n        if (url.startsWith(serviceUrl)) {\n        // \"ServiceUrl\" is 10 characters\n          return Promise.resolve(key.substr(0, key.length - 10));\n        }\n      }\n    }\n\n    return Promise.reject(new Error(`${url} does not reflect a known service`));\n  },\n\n@waitForValue('@')\n  getServiceUrl(service) {\n    const feature = this.features.developer.get('web-high-availability');\n\n    if (feature && feature.value) {\n      return this._getServiceUrl(this.serviceHostMap.serviceLinks, service)\n        .then((isServiceUrl) => isServiceUrl || this.getPreDiscoveryServiceUrl(service));\n    }\n\n    return this._getServiceUrl(this.services, service)\n      .then((isServiceUrl) => isServiceUrl || this.getPreDiscoveryServiceUrl(service));\n  },\n\n  getPreDiscoveryServiceUrl(service) {\n  // The Promise.resolve here is temporary. A future PR will make the\n  // corresponding _ method async to allow for lazy device registration\n    return Promise.resolve(this._getServiceUrl(this.config.preDiscoveryServices, service));\n  },\n\n  getWebSocketUrl() {\n    return this.useServiceCatalogUrl(this.webSocketUrl);\n  },\n\n  useServiceCatalogUrl(uri) {\n    return this.serviceCatalog.inferServiceFromUrl(uri)\n      .then((s) => s.replaceUrlWithCurrentHost(uri));\n  },\n\n  markUrlFailedAndGetNew(url) {\n    if (!url) {\n      return Promise.reject(new Error('`url` is a required parameter'));\n    }\n\n    this.logger.info(`device: marking ${url} as failed`);\n\n    return this.serviceCatalog.markFailedAndCycleUrl(url)\n      .then((uri) => {\n        this.webex.internal.metrics.submitClientMetrics('web-ha', {\n          tags: {\n            action: 'replace_url',\n            failedUrl: url,\n            newUrl: uri\n          }\n        });\n\n        return uri;\n      })\n    // it's likely we fail here because we've cycled though all hosts,\n    // reset all hosts and then retry connecting\n      .catch(() => this._resetAllAndRetry(url));\n  },\n\n  _resetAllAndRetry(url) {\n    if (!url) {\n      return Promise.reject(new Error('`url` is a required parameter'));\n    }\n\n    this.logger.info(`device: reset available hosts and retry ${url}`);\n\n    return this.serviceCatalog.resetAllAndRetry(url);\n  },\n\n  // this function is exposed beyond the device file\n  fetchNewUrls(url) {\n  // we want to get the current service first, just in case the\n  // refreshed catalog has different host names\n    return new Promise((resolve) => this.serviceCatalog.inferServiceFromUrl(url)\n      .then((s) => {\n        this.logger.info(`device: refresh to ${s.service} get new urls`);\n        this.refresh();\n        this.on('serviceCatalogUpdated', () => resolve(s.url));\n      }));\n  },\n\n@persist('@', decider)\n  initialize(...args) {\n    Reflect.apply(WebexPlugin.prototype.initialize, this, args);\n\n    // Propagate change(:[attribute]) events from collections\n    ['developer', 'entitlement', 'user'].forEach((collectionName) => {\n      this.features.on(`change:${collectionName}`, (model, value, options) => {\n        this.trigger('change', this, options);\n        this.trigger('change:features', this, this.features, options);\n      });\n    });\n\n    // Initialize it to false.\n    this.isReachabilityChecked = false;\n\n    this.on('change:serviceHostMap', this._updateServiceCatalog);\n\n    this.listenToAndRun(this, 'change:intranetInactivityCheckUrl', () => { this.testNetworkReachability(); });\n    this.listenToAndRun(this, 'change:intranetInactivityDuration', () => { this.testNetworkReachability(); });\n    this.listenToAndRun(this, 'change:inNetworkInactivityDuration', () => { this.testNetworkReachability(); });\n    this.listenTo(this.webex, 'user-activity', () => {\n      this.lastUserActivityDate = Date.now();\n    });\n    /**\n   * Meeting started and ended event listenrs\n   * When client enters into the meeting set isInMeeting to true\n   * This tells also triggers both the timers inturn un-setting the timers until meeting ends\n   * On meeting end/clean-up the timers are reset.\n   */\n    this.listenTo(this.webex, 'meeting started', () => {\n      this.isInMeeting = true;\n      this._resetLogoutTimer();\n    });\n    this.listenTo(this.webex, 'meeting ended', () => {\n      this.isInMeeting = false;\n      this._resetLogoutTimer();\n    });\n  },\n\n  /**\n * Don't log the features object\n * @param {number} depth\n * @returns {Object}\n */\n  inspect(depth) {\n    return util.inspect(omit(this.serialize(), 'features'), {depth});\n  },\n\n  isPreDiscoveryService(service) {\n  // The Promise.resolve here is temporary. A future PR will make the\n  // corresponding _ method async to allow for lazy device registration\n    return Promise.resolve(this._isService(this.config.preDiscoveryServices, service));\n  },\n\n  /**\n * Meeting started and Meeting Ended\n * These are device.internal functions that can be accessible from web-client\n * These are used to trigger the events for meeting start/end from within web client.\n * @returns {boolean}\n */\n  meetingStarted() {\n    this.webex.trigger('meeting started');\n  },\n  /**\n * Meeting started and Meeting Ended\n * These are device.internal functions that can be accessible from web-client\n * These are used to trigger the events for meeting start/end from within web client.\n * @returns {boolean}\n */\n  meetingEnded() {\n    this.webex.trigger('meeting ended');\n  },\n\n  testNetworkReachability() {\n    if (this.isReachabilityChecked) {\n      return this._resetLogoutTimer();\n    }\n\n    if (!this.intranetInactivityCheckUrl) {\n      this.isInNetwork = false;\n\n      return this._resetLogoutTimer();\n    }\n\n    this.isReachabilityChecked = true;\n    this.webex.request({\n      headers: {\n        'cisco-no-http-redirect': null,\n        'spark-user-agent': null,\n        trackingid: null\n      },\n      method: 'GET',\n      uri: this.intranetInactivityCheckUrl\n    })\n      .then(() => {\n        this.isInNetwork = true;\n\n        return this._resetLogoutTimer();\n      })\n      .catch(() => {\n        this.logger.info('device: did not reach internal ping endpoint; Setting off-network timer');\n        this.isInNetwork = false;\n\n        return this._resetLogoutTimer();\n      });\n\n    // Added due to eslint error.\n    return true;\n  },\n\n  isPreDiscoveryServiceUrl(uri) {\n    if (!uri) {\n      return Promise.reject(new Error('`uri` is a required parameter'));\n    }\n\n    // The Promise.resolve here is temporary. A future PR will make the\n    // corresponding _ method async to allow for lazy device registration\n    return Promise.resolve(this._isServiceUrl(this.config.preDiscoveryServices, uri));\n  },\n\n@waitForValue('@')\n  isService(service) {\n    if (service === 'idbroker') {\n      return Promise.resolve(false);\n    }\n    const feature = this.features.developer.get('web-high-availability');\n\n    if (feature && feature.value) {\n      return this._isService(this.serviceHostMap.serviceLinks, service)\n        .then((_isService) => _isService || this.isPreDiscoveryService(service));\n    }\n\n    return this._isService(this.services, service)\n      .then((_isService) => _isService || this.isPreDiscoveryService(service));\n  },\n\n@waitForValue('@')\n  isServiceUrl(uri) {\n  // The Promise.resolve here is temporary. A future PR will make the\n  // corresponding _ method async to allow for lazy device registration\n    if (!uri) {\n      return Promise.reject(new Error('`uri` is a required parameter'));\n    }\n    const feature = this.features.developer.get('web-high-availability');\n\n    if (feature && feature.value) {\n      if (this._isServiceUrl(this.serviceHostMap.serviceLinks, uri) ||\n      this._isServiceUrlFromCatalog(this.serviceHostMap.hostCatalog, uri)) {\n        return Promise.resolve(true);\n      }\n\n      return Promise.resolve(false);\n    }\n\n    return Promise.resolve(this._isServiceUrl(this.services, uri));\n  },\n\n@waitForValue('@')\n  isSpecificService(service, key) {\n    if (key === service) {\n      return Promise.resolve(true);\n    }\n\n    return this.getServiceUrl(service)\n      .then((serviceUrl) => key.includes(serviceUrl));\n  },\n\n  _getServiceUrl(target, service) {\n  /* istanbul ignore if */\n    if (!service) {\n      return Promise.reject(new Error('`service` is a required parameter'));\n    }\n\n    const feature = this.features.developer.get('web-high-availability');\n\n    if (feature && feature.value) {\n      const s = this.serviceCatalog.get(service);\n\n      if (s) {\n        return Promise.resolve(s.url);\n      }\n    }\n\n    if (!target) {\n      return Promise.reject(new Error('`target` is a required parameter'));\n    }\n\n    return Promise.resolve(target[`${service}ServiceUrl`]);\n  },\n\n  _isService(target, service) {\n    return this._getServiceUrl(target, service)\n      .then((url) => Boolean(url));\n  },\n\n  _isServiceUrl(target, uri) {\n    const feature = this.features.developer.get('web-high-availability');\n\n    if (feature && feature.value) {\n      for (const key of Object.keys(target)) {\n        const serviceUrl = target[key];\n\n        if (key !== 'idbroker' && uri.startsWith(serviceUrl)) {\n          return true;\n        }\n      }\n    }\n    else {\n      for (const value of Object.values(target)) {\n        if (value && uri.startsWith(value)) {\n          return Promise.resolve(true);\n        }\n      }\n    }\n\n    return false;\n  },\n\n  _isServiceUrlFromCatalog(hostCatalog, uri) {\n    const hostName = Url.parse(uri).hostname;\n\n    if (hostName && !hostName.includes('idbroker') &&\n    find(hostCatalog, (service) => find(service, (availableHost) => availableHost.host === hostName))) {\n      return true;\n    }\n\n    return false;\n  },\n\n@oneFlight\n@waitForValue('@')\n  refresh() {\n    let headers;\n\n    this.logger.info('device: refreshing');\n\n    if (!this.registered) {\n      this.logger.info('device: device not registered, registering');\n\n      return this.register();\n    }\n\n    const body = omit(this.serialize(), 'features', 'mediaClusters');\n\n    if (this.config.ephemeral) {\n      body.ttl = this.config.ephemeralDeviceTTL;\n    }\n\n    if (this.config.defaults && this.config.defaults.headers) {\n      headers = this.config.defaults.headers;\n    }\n\n    return this.request({\n      method: 'PUT',\n      uri: this.url,\n      body,\n      headers\n    })\n      .then((res) => this._processRegistrationSuccess(res))\n      .catch((reason) => {\n        if (reason.statusCode === 404) {\n        // If we get a 404, it means the device is no longer valid and we need\n        // to register a new one.\n          this.logger.info('device: refresh failed with 404, attempting to register new device');\n          this.clear();\n\n          return this.register();\n        }\n\n        return Promise.reject(reason);\n      });\n  },\n\n@oneFlight\n@waitForValue('@')\n  register() {\n    let headers;\n\n    /* eslint no-invalid-this: [0] */\n    this.logger.info('device: registering');\n    if (this.registered) {\n      this.logger.info('device: device already registered, refreshing');\n\n      return this.refresh();\n    }\n\n    const body = omit(this.config.defaults, 'headers');\n\n    if (this.config.ephemeral) {\n      body.ttl = this.config.ephemeralDeviceTTL;\n    }\n\n    if (this.config.defaults && this.config.defaults.headers) {\n      headers = this.config.defaults.headers;\n    }\n\n    return this.request({\n      method: 'POST',\n      service: 'wdm',\n      resource: 'devices',\n      body,\n      headers\n    })\n      .then((res) => this._processRegistrationSuccess(res));\n  },\n\n@oneFlight\n@waitForValue('@')\n  unregister() {\n    this.logger.info('device: unregistering');\n\n    if (!this.url) {\n      this.logger.warn('device: not registered');\n\n      return Promise.resolve();\n    }\n\n    return this.request({\n      uri: this.url,\n      method: 'DELETE'\n    })\n      .then(() => this.clear());\n  },\n\n  clear(...args) {\n    clearTimeout(this.refreshTimer);\n    Reflect.apply(WebexPlugin.prototype.clear, this, args);\n  },\n\n  _processRegistrationSuccess(res) {\n    this.logger.info('device: received registration payload');\n    this.set(res.body);\n    if (this.config.ephemeral) {\n      this.logger.info('device: enqueing device refresh');\n      const delay = (this.config.ephemeralDeviceTTL / 2 + 60) * 1000;\n\n      this.refreshTimer = safeSetTimeout(() => this.refresh(), delay);\n    }\n  },\n\n  _updateServiceCatalog(newRegistration) {\n    const feature = this.features.developer.get('web-high-availability');\n\n    if (feature && feature.value) {\n      if (newRegistration.serviceHostMap &&\n      newRegistration.serviceHostMap.serviceLinks &&\n      newRegistration.serviceHostMap.hostCatalog) {\n        Object.keys(newRegistration.serviceHostMap.serviceLinks).forEach((key) => {\n          const hostName = Url.parse(newRegistration.serviceHostMap.serviceLinks[key]).hostname;\n          const hosts = newRegistration.serviceHostMap.hostCatalog[hostName];\n\n          this.serviceCatalog.set({\n            service: key,\n            defaultUrl: newRegistration.serviceHostMap.serviceLinks[key],\n            availableHosts: hosts || []\n          }, {remove: false});\n        });\n        this.trigger('serviceCatalogUpdated');\n      }\n      else {\n      // if user has old device in localStorage, refresh device\n        this.refresh();\n      }\n    }\n  },\n\n  _resetLogoutTimer() {\n    // Clear any previously set timers and listeners\n    clearTimeout(this.logoutTimer);\n    this.off('change:lastUserActivityDate'); // removes previous event listener\n    this.unset('logoutTimer');\n\n    if (!this.isInMeeting && this.config.enableInactivityEnforcement && this.isReachabilityChecked) {\n      if (this.isInNetwork) {\n        this._setLogoutTimer(this.inNetworkInactivityDuration);\n      }\n      else {\n        this._setLogoutTimer(this.intranetInactivityDuration);\n      }\n    }\n  },\n\n  _setLogoutTimer(duration) {\n    if (!duration || (duration && duration === -1)) {\n      return;\n    }\n    this.on('change:lastUserActivityDate', () => { this._resetLogoutTimer(); });\n    const timer = safeSetTimeout(() => {\n      this.webex.logout();\n    }, duration * 1000);\n\n    this.logoutTimer = timer;\n  }\n\n});\n\nexport default Device;\n"]}